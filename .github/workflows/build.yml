name: Multi-Device Builder

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: ['miyoo', 'trimui', 'brick']
        include:
          - device: 'miyoo'
            core_name: 'doublecherrygb_libretro.so'
            cmake_flag: '-DDEVICE_MIYOO=ON'
            toolchain_file: 'toolchains/miyoo.cmake'
            strip_cmd: 'arm-linux-gnueabihf-strip'
          - device: 'trimui'
            core_name: 'doublecherrygb_libretro.so'
            cmake_flag: '-DDEVICE_TRIMUI=ON'
            toolchain_file: 'toolchains/trimui.cmake'
            strip_cmd: 'aarch64-linux-strip'
          - device: 'brick'
            core_name: 'doublecherrygb_libretro.so'
            cmake_flag: '-DDEVICE_BRICK=ON'
            toolchain_file: 'toolchains/brick.cmake'
            strip_cmd: 'mipsel-linux-musl-strip'

    steps:
      - name: Checkout repository (inkl. Submodule)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set Build Metadata
        run: |
          echo "BUILD_DATE=$(date -u +'%Y%m%d')" >> $GITHUB_ENV
          echo "GIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker Image
        run: docker build --target ${{ matrix.device }} -t builder .

      - name: Build Core inside Container
        run: |
          docker run --rm -v "${{ github.workspace }}:/build" -w /build builder \
            sh -c "cmake -B build ${{ matrix.cmake_flag }} \
                    -DCMAKE_TOOLCHAIN_FILE=${{ matrix.toolchain_file }} \
                 && cmake --build build -j$(nproc) \
                 && ${{ matrix.strip_cmd }} build/${{ matrix.core_name }}"

      - name: Package Core
        run: |
          mkdir -p release/cores
          cp build/${{ matrix.core_name }} release/cores/
          zip -j "DoubleCherryGB_${{ matrix.device }}_${{ env.GIT_HASH }}.zip" release/cores/*

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.device }}-package
          path: DoubleCherryGB_${{ matrix.device }}_${{ env.GIT_HASH }}.zip
          retention-days: 3

      - name: Create GitHub Release (automatisch bei Push)
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          files: DoubleCherryGB_${{ matrix.device }}_${{ env.GIT_HASH }}.zip
          tag_name: "v0.18-${{ env.GIT_HASH }}"
          body: |
            Automated build for **${{ matrix.device }}**
            Version: v0.18-${{ env.GIT_HASH }}
            Build date: ${{ env.BUILD_DATE }}
