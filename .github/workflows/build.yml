name: Multi-Device Builder

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  BUILD_DATE: $(date -u +'%Y%m%d')
  GIT_HASH: $(git rev-parse --short HEAD)

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: ['miyoo', 'trimui', 'brick']
        include:
          - device: 'miyoo'
            core_name: 'doublecherrygb_libretro.so'
            cmake_flag: '-DDEVICE_MIYOO=ON'
            toolchain_file: '/opt/miyoo/share/buildroot/toolchainfile.cmake'
          - device: 'trimui'
            core_name: 'doublecherrygb_libretro.so'
            cmake_flag: '-DDEVICE_TRIMUI=ON'
            toolchain_file: '/opt/trimui/share/buildroot/toolchainfile.cmake'
          - device: 'brick'
            core_name: 'doublecherrygb_libretro.so'
            cmake_flag: '-DDEVICE_BRICK=ON'
            toolchain_file: '/opt/brick/share/cmake/toolchain.cmake'

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build with Docker
        run: |
          docker build --target ${{ matrix.device }} -t builder .
          docker run --rm -v "$PWD/output:/output" builder \
            sh -c "cmake -B build ${{ matrix.cmake_flag }} \
                  -DCMAKE_TOOLCHAIN_FILE=${{ matrix.toolchain_file }} \
                  && cmake --build build -j$(nproc) \
                  && ${{ matrix.device == 'brick' && 'mipsel-linux-musl-strip' || \
                       (if [ '${{ matrix.device }}' = 'miyoo' ]; then echo 'arm-linux-gnueabihf-strip'; \
                        else echo 'aarch64-linux-strip'; fi) }} build/${{ matrix.core_name }} \
                  && cp build/${{ matrix.core_name }} /output/"

      - name: Package Release
        run: |
          mkdir -p release/cores
          cp output/${{ matrix.core_name }} release/cores/
          zip -j "DoubleCherryGB_${{ matrix.device }}_${GIT_HASH}.zip" release/cores/*

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.device }}-package
          path: DoubleCherryGB_${{ matrix.device }}_${GIT_HASH}.zip
          retention-days: 3

      - name: Create Release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          files: DoubleCherryGB_*.zip
          tag_name: "v0.18-${{ env.GIT_HASH }}"
          body: |
            Automated build for ${{ matrix.device }}
            Version: 0.18-${{ env.GIT_HASH }}
            Build date: ${{ env.BUILD_DATE }}